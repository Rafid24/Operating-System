#include<bits/stdc++.h>
using namespace std;

int process[50],aTime[50],bTime[50],abTime[50],wTime[50],tat_time[50];
int n = 0,i = 0 ;
float aw_time = 0, atat_time = 0;  //FCFS

int p[10]={1,2,3,4,5,6,7,8,9,10},mini,k=1,btime=0;
int bt[10],temp,j,at[10],wt[10],tt[10],ta=0,sum=0;
float wavg=0,tavg=0,tsum=0,wsum=0;  //SJF



void input_FCFS()
{
    printf("\nTotal Processes : ");
    scanf("%d",&n);

    printf("Enter the Arrival Time and Burst Time.\n\n");

    printf("\tAT BT\n");
    for(i = 0 ; i < n ; i++)
    {
        process[i]=i+1;
        printf("P%d :\t", i+1);
        scanf("%d\t%d",&aTime[i],&bTime[i]);
    }

}
void calculate_FCFS()
{
    wTime[0] = 0;

    tat_time[0] = bTime[0];

    abTime[0] = bTime[0]+aTime[0];

    for( i = 1 ; i < n ; i++)
    {
        abTime[i] = abTime[i-1] + bTime[i];
        tat_time[i] = abTime[i] - aTime[i];
        wTime[i] = tat_time[i] - bTime[i];
    }

    for(i = 0 ; i < n ; i++)
    {
        aw_time = aw_time + wTime[i];
        atat_time = atat_time + tat_time[i];
    }

}
void display_FCFS()
{
    printf("\tAT\tBT\tCT\tTaT\tWT\n");
    for(i = 0 ; i < n ; i++)
    {
        printf("P[%d]\t%d\t%d\t%d\t%d\t%d\n",i,aTime[i],bTime[i],abTime[i],tat_time[i],wTime[i]);
    }

    printf("\nAverage Waiting Time = %0.2f",aw_time/n);

    printf("\nAverage Turn-Around-Time = %0.2f\n",atat_time/n);

}


void input_SJF()
{
    printf("\nTotal Processes : ");
    scanf("%d",&n);

    printf("Enter the Arrival Time and Burst Time.\n\n");

    printf("\tAT BT\n");
    for(i = 0 ; i < n ; i++)
    {
        p[i]=i+1;
        printf("P%d :\t", i+1);
        scanf("%d\t%d",&at[i],&bt[i]);
    }
}

/*Sorting According to Arrival Time*/
void calculate_SJF()
{
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            if(at[i]<at[j])
            {
                temp=p[j];
                p[j]=p[i];
                p[i]=temp;
                temp=at[j];
                at[j]=at[i];
                at[i]=temp;
                temp=bt[j];
                bt[j]=bt[i];
                bt[i]=temp;
            }
        }
    }
    for(j=0;j<n;j++)
    {
        btime=btime+bt[j];
        mini=bt[k];
        for(i=k;i<n;i++)
        {
            if (btime>=at[i] && bt[i]<mini)
            {
                temp=p[k];
                p[k]=p[i];
                p[i]=temp;
                temp=at[k];
                at[k]=at[i];
                at[i]=temp;
                temp=bt[k];
                bt[k]=bt[i];
                bt[i]=temp;
            }
            }
        k++;
    }
    wt[0]=0;
    for(i=1;i<n;i++)
    {
        sum=sum+bt[i-1];
        wt[i]=sum-at[i];
        wsum=wsum+wt[i];
    }

    wavg=(wsum/n);
    for(i=0;i<n;i++)
    {
        ta=ta+bt[i];
        tt[i]=ta-at[i];
        tsum=tsum+tt[i];
    }

    tavg=(tsum/n);
}

void display_SJF()
{


    printf("\tAT\tBT\tCT\tTaT\tWT\n");
    for(i = 0 ; i < n ; i++)
    {
        printf("P[%d]\t%d\t%d\t%d\t%d\t%d\n",i,at[i],bt[i],tt[i],wt[i]);
    }

    printf("\nAverage Waiting Time = %0.2f",wavg/n);

    printf("\nAverage Turn-Around-Time = %0.2f\n",tavg/n);

}






int main()
{
    int choice;
    cout<<"1 for Non-Preemtive"<<endl;
    cout<<"2 for Preemtive"<<endl;
    cout<<"\nEnter Choice:";
    cin>>choice;

    switch(choice)
    {
        case 1:
        {
            int choice1;
            cout<<"\n1 for First Come First Serve(FCFS)"<<endl;
            cout<<"2 for Shortest Job First(SJF)"<<endl;
            cout<<"\nEnter Choice:";
            cin>>choice1;

            switch(choice1)
            {

            case 1:
                {
                    printf("\nFCFS CPU Scheduling Algorithm\n");
                    input_FCFS();
                    calculate_FCFS();
                    display_FCFS();
                    return 0;
                }
            case 2:
                {
                    printf("\nShortest Job First CPU Scheduling Algorithm\n");
                    input_SJF();
                    calculate_SJF();
                    display_SJF();
                }
            }
        }



        case 2:
        {
            int choice2;
            cout<<"\n1 for Priority"<<endl;
            cout<<"2 for Round Robin"<<endl;
            cout<<"\nEnter Choice:";
            cin>>choice2;

            switch(choice2)
            {
            case 1:
                {

                }
            case 2:
                {

                }
            }
        }

        default:
            printf("Error!");

        break;


    }


    return 0;
}
